name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - stable
          - beta
          - nightly
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.channel }}
        override: true
    - name: Cache cargo registry & index
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-index-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --all-targets
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --all-targets

  test_cov:
    name: Build, Test & Coverage (nightly)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: llvm-tools-preview
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --all-targets
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --all-targets --no-fail-fast
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Coverage Report
      uses: actions-rs/grcov@v0.1
      with:
        config: .github/grcov.yml

  check:
    name: Rustfmt & Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Cache cargo registry & index
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-index-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-targets
